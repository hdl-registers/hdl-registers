name: ci

on:
  # Run when a pull request is opened or updated.
  pull_request:
  # Add possibility of running manually from webpage.
  workflow_dispatch:
  # Run from main when a pull request is merged.
  push:
    branches:
      - main
  # Run nightly at 20:45 UTC.
  schedule:
  - cron: 45 20 * * *

jobs:

  # ------------------------------------------------------------------------------
  # Run all Python-based tests.

  pytest:
    name: Run Python tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py: ['3.9', '3.10', '3.11', '3.12']
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.py }}
        cache: pip
        cache-dependency-path: hdl_registers/requirements_develop.txt

    - name: Install Python packages
      run: |
        python3 -m pip install \
          pytest \
          PyYAML \
          rtoml

    - name: Clone dependency repos
      run: |
        git clone --depth 1 --single-branch --branch main \
          https://github.com/tsfpga/tsfpga.git ../../tsfpga/tsfpga
        git clone --depth 1 --single-branch --branch main \
          https://github.com/hdl-modules/hdl-modules.git ../../hdl-modules/hdl-modules

    # Run only the UNIT tests on most Python versions in the matrix.
    # This is very fast (2-3 s).
    - name: Run unit tests
      if: matrix.py != '3.9'
      run: |
        python3 -m pytest \
          --verbose \
          hdl_registers

    # On one Python version however, we run ALL the Python-based tests, which requires a few more
    # dependencies, and then we collect coverage from this run.
    - name: Setup GHDL
      if: matrix.py == '3.9'
      uses: ghdl/setup-ghdl-ci@nightly

    - name: Install further Python packages
      if: matrix.py == '3.9'
      run: |
        python3 -m pip install \
          black \
          flake8 \
          GitPython \
          mypy \
          pybadges \
          pylint \
          pytest-cov \
          pytest-xdist \
          types-PyYAML \
          vunit-hdl

    # Run ALL tests, including unit, lint and functional ones.
    # The execution time goes from 1:13 -> 0:50 when two threads are used.
    - name: Run all tests
      if: matrix.py == '3.9'
      run: |
        python3 -m pytest \
          --verbose \
          --numprocesses 2 \
          --cov hdl_registers \
          --cov-report xml:generated/python_coverage.xml \
          --cov-report html:generated/python_coverage_html \
          hdl_registers \
          tests

    - name: Upload coverage artifacts
      # Save time in pull request CI by not uploading artifact (takes 4-5 sec).
      if: matrix.py == '3.9'
      # && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: generated/python_coverage*


  # ------------------------------------------------------------------------------
  # Build HTML documentation for website.

  build_website:
    name: Build HTML documentation
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        cache: pip
        cache-dependency-path: hdl_registers/requirements_develop.txt

    - name: Install Python packages
      run: |
        pip install \
          GitPython \
          PyYAML \
          rtoml \
          sphinx \
          sphinx-rtd-theme \
          sphinx_sitemap \
          sphinx-toolbox

    - name: Clone dependency repos
      run: |
        git clone --depth 1 --single-branch --branch main \
          https://github.com/tsfpga/tsfpga.git ../../tsfpga/tsfpga

    - name: Run job
      run: |
        # Without tags, 'build_website.py' can not find all git tags fo release history.
        # Note that 'fetch-tags: true' on the checkout actions did not work (2023-11-29).
        git fetch --all --tags
        python3 tools/build_website.py

    - name: Upload Sphinx HTML artifacts
      # Save time in pull request CI by not uploading artifact (takes ~7 sec).
      # if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: sphinx_html
        path: generated/sphinx_html


  # ------------------------------------------------------------------------------
  # Deploy the HTML to GitHub Pages.

  deploy_pages:
    name: Deploy website to pages
    #if: github.ref == 'refs/heads/main'
    # Only do deployment if everything else has passed.
    needs: [pytest, build_website, build_pypi]
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
          cache: pip
          cache-dependency-path: hdl_registers/requirements_develop.txt

      - name: Install Python packages
        run: |
          pip install \
            pybadges

      - name: Clone dependency repos
        run: |
          git clone --depth 1 --single-branch --branch main \
            https://github.com/tsfpga/tsfpga.git ../../tsfpga/tsfpga

      - name: Download Sphinx artifacts
        uses: actions/download-artifact@v3
        with:
          name: sphinx_html
          path: generated

      - name: Download coverage artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: generated

      - run: "ls && ls generated && ls generated/sphinx_html"

      - name: Build badges
        run: |
          python3 tools/build_badges_for_website.py

      - name: Configure Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v3

      - name: Upload Pages Artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v1
        with:
          path: generated/sphinx_html

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2


  # ------------------------------------------------------------------------------
  # Build the Python release package for PyPI.

  build_pypi:
    name: Build PyPI release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run job
        run: python3 setup.py sdist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: dist
